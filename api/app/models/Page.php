<?php

namespace BCF\Models;

/**
 * Page
 *
 * @package BCF\Models
 * @autogenerated by Phalcon Developer Tools
 * @date 2018-06-20, 19:43:54
 */
class Page extends Base\BCFModel
{
    
    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(column="page_id", type="integer", length=20, nullable=false)
     */
    protected $pageId;
    
    /**
     *
     * @var integer
     * @Column(column="checkpoint_id", type="integer", length=20, nullable=false)
     */
    protected $checkpointId;
    
    /**
     *
     * @var integer
     * @Column(column="layout_id", type="integer", length=5, nullable=false)
     */
    protected $layoutId;
    
    /**
     *
     * @var string
     * @Column(column="content", type="string", nullable=false)
     */
    protected $content;
    
    /**
     *
     * @var integer
     * @Column(column="number", type="integer", length=3, nullable=false)
     */
    protected $number;
    
    /**
     *
     * @var string
     * @Column(column="background", type="string", length=255, nullable=true)
     */
    protected $background;
    
    /**
     *
     * @var string
     * @Column(column="created_at", type="string", nullable=false)
     */
    protected $createdAt;
    
    /**
     *
     * @var string
     * @Column(column="modified_at", type="string", nullable=true)
     */
    protected $modifiedAt;
    
    /**
     * Method to set the value of field pageId
     *
     * @param integer $pageId
     * @return $this
     */
    public function setPageId($pageId)
    {
        $this->pageId = $pageId;
        
        return $this;
    }
    
    /**
     * Method to set the value of field checkpointId
     *
     * @param integer $checkpointId
     * @return $this
     */
    public function setCheckpointId($checkpointId)
    {
        $this->checkpointId = $checkpointId;
        
        return $this;
    }
    
    /**
     * Method to set the value of field layoutId
     *
     * @param integer $layoutId
     * @return $this
     */
    public function setLayoutId($layoutId)
    {
        $this->layoutId = $layoutId;
        
        return $this;
    }
    
    /**
     * Method to set the value of field content
     *
     * @param string $content
     * @return $this
     */
    public function setContent($content)
    {
        $this->content = $content;
        
        return $this;
    }
    
    /**
     * Method to set the value of field number
     *
     * @param integer $number
     * @return $this
     */
    public function setNumber($number)
    {
        $this->number = $number;
        
        return $this;
    }
    
    /**
     * Method to set the value of field background
     *
     * @param string $background
     * @return $this
     */
    public function setBackground($background)
    {
        $this->background = $background;
        
        return $this;
    }
    
    /**
     * Method to set the value of field createdAt
     *
     * @param string $createdAt
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;
        
        return $this;
    }
    
    /**
     * Method to set the value of field modifiedAt
     *
     * @param string $modifiedAt
     * @return $this
     */
    public function setModifiedAt($modifiedAt)
    {
        $this->modifiedAt = $modifiedAt;
        
        return $this;
    }
    
    /**
     * Returns the value of field pageId
     *
     * @return integer
     */
    public function getPageId()
    {
        return $this->pageId;
    }
    
    /**
     * Returns the value of field checkpointId
     *
     * @return integer
     */
    public function getCheckpointId()
    {
        return $this->checkpointId;
    }
    
    /**
     * Returns the value of field layoutId
     *
     * @return integer
     */
    public function getLayoutId()
    {
        return $this->layoutId;
    }
    
    /**
     * Returns the value of field content
     *
     * @return string
     */
    public function getContent()
    {
        return $this->content;
    }
    
    /**
     * Returns the value of field number
     *
     * @return integer
     */
    public function getNumber()
    {
        return $this->number;
    }
    
    /**
     * Returns the value of field background
     *
     * @return string
     */
    public function getBackground()
    {
        return $this->background;
    }
    
    /**
     * Returns the value of field createdAt
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }
    
    /**
     * Returns the value of field modifiedAt
     *
     * @return string
     */
    public function getModifiedAt()
    {
        return $this->modifiedAt;
    }
    
    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("bcf_presentation");
        $this->setSource("page");
        $this->belongsTo('checkpointId', 'BCF\Models\Checkpoint', 'checkpointId', ['alias' => 'Checkpoint']);
        $this->belongsTo('layoutId', 'BCF\Models\Layout', 'layoutId', ['alias' => 'Layout']);
    }
    
    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'page';
    }
    
    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Page[]|Page|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }
    
    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Page|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }
    
    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'page_id' => 'pageId',
            'checkpoint_id' => 'checkpointId',
            'layout_id' => 'layoutId',
            'content' => 'content',
            'number' => 'number',
            'background' => 'background',
            'created_at' => 'createdAt',
            'modified_at' => 'modifiedAt',
        ];
    }
    
    public function getChildren(): array
    {
        return [];
    }
}
